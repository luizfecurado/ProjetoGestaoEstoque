version: '3.8'

services:
  # Serviço do PostgreSQL
  postgres:
    image: postgres:15
    container_name: gestao_estoque_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-gestao_estoque}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gestao_estoque_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço da API
  api:
    build: .
    container_name: gestao_estoque_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-gestao_estoque}
      - DEBUG=${DEBUG:-False}
      - HOST=0.0.0.0
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gestao_estoque_network
    restart: unless-stopped

  # Interface web (opcional - usando nginx para servir frontend)
  nginx:
    image: nginx:alpine
    container_name: gestao_estoque_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      - gestao_estoque_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  gestao_estoque_network:
    driver: bridge 